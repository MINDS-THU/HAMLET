{
    "problem_type": [
        {
            "name": "Assignment",
            "description": "Matching tasks or agents to each other optimally."
        },
        {
            "name": "Scheduling",
            "description": "Assigning jobs to machines or time slots under constraints."
        },
        {
            "name": "Routing",
            "description": "Finding optimal paths or routes, such as TSP or VRP."
        },
        {
            "name": "Packing",
            "description": "Selecting items to fit within constraints, e.g., bin packing."
        },
        {
            "name": "Facility Location",
            "description": "Deciding optimal placement of facilities to meet demand."
        },
        {
            "name": "Resource Allocation",
            "description": "Distributing limited resources for maximum benefit."
        },
        {
            "name": "Network Design",
            "description": "Designing optimal network structures for flow or communication."
        },
        {
            "name": "Queuing",
            "description": "Analyzing waiting lines to optimize service systems."
        },
        {
            "name": "Inventory Management",
            "description": "Managing stock levels to balance cost and availability."
        },
        {
            "name": "Flexibility Design",
            "description": "Designing systems to adapt under uncertainty."
        },
        {
            "name": "Simulation Modeling",
            "description": "Modeling system behavior using simulation techniques."
        }
    ],
    "formulation": [
        {
            "name": "Linear Programming (LP)",
            "description": "Optimization with linear objective and constraints."
        },
        {
            "name": "Integer Programming (IP/MIP)",
            "description": "Models with some or all integer decision variables."
        },
        {
            "name": "Nonlinear Programming (NLP)",
            "description": "Includes nonlinear objective or constraints."
        },
        {
            "name": "Stochastic Programming",
            "description": "Optimization under probabilistic uncertainty."
        },
        {
            "name": "Constraint Programming (CP)",
            "description": "Solves constraint satisfaction problems."
        },
        {
            "name": "Dynamic Programming (DP)",
            "description": "Solves problems with sequential decisions."
        },
        {
            "name": "Markov Decision Process (MDP)",
            "description": "Sequential decision-making under uncertainty."
        },
        {
            "name": "Queuing Models",
            "description": "Models for systems involving waiting lines."
        },
        {
            "name": "Simulation Model",
            "description": "Represents real-world systems using simulation."
        },
        {
            "name": "Multi-objective Formulation",
            "description": "Optimization with multiple objectives."
        }
    ],
    "solution_method": [
        {
            "name": "Simplex Method",
            "description": "Algorithm to solve LP problems efficiently."
        },
        {
            "name": "Interior Point",
            "description": "Alternative to simplex for solving LPs/NLPs."
        },
        {
            "name": "Branch and Bound",
            "description": "Exact method for integer programming."
        },
        {
            "name": "Cutting Planes",
            "description": "Improves integer programming with extra constraints."
        },
        {
            "name": "Heuristics",
            "description": "Fast, rule-based approximations to find solutions."
        },
        {
            "name": "Metaheuristics",
            "description": "General frameworks like GA, SA, and Tabu for hard problems."
        },
        {
            "name": "Monte Carlo Simulation",
            "description": "Uses random sampling to model uncertainty."
        },
        {
            "name": "Genetic Algorithm",
            "description": "Metaheuristic inspired by natural selection."
        },
        {
            "name": "Value Iteration",
            "description": "Solves MDPs by iteratively improving value estimates."
        },
        {
            "name": "Reinforcement Learning",
            "description": "Learning-based optimization for sequential decisions."
        },
        {
            "name": "Greedy",
            "description": "Constructive heuristics selecting local optima at each step."
        },
        {
            "name": "Dynamic Programming",
            "description": "Breaks problem into stages and solves recursively."
        },
        {
            "name": "Dual Methods",
            "description": "Leverages duality in LPs for optimization insights."
        }
    ]
}